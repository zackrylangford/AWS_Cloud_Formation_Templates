
Description: Template for launching up to 4 VMs at once for Pheonix Corporation
Parameters: 
  
### How many VMs to launch  
  InstanceCount:
    Description: Number of EC2 instances to launch (must be between 1-4)
    Type: Number
    Default: 1
    MinValue: 1
    MaxValue: 4
    ConstraintDescription: Must be a number between 1 and 4
 
 
### VM1 Specs
  VM1InstanceName: 
    Description: Name for the instance
    Type: String
    Default: VMInstanceName
  VM1InstanceType:
    Description: Type of VM that the user wants to launch 
    Type: String
    Default: t2.micro
    AllowedValues: 
      - t2.micro
      - m1.small
      - m1.large
  VM1KeyPair: 
    Description: Select the keypair to SSH into instance
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: "KeyPair"
  VM1VPC: 
    Description: Specify the VPC to launch the instance
    Type: "AWS::EC2::VPC::Id"
    Default: "VPC"
  VM1Subnet: 
    Description: Select the department subnet
    Type: "AWS::EC2::Subnet::Id"
    Default: "Subnet"
  VM1SecurityGroup: 
    Description: Select the security Group associated with the department
    Type: "AWS::EC2::SecurityGroup::Id"
    Default: "Security Group"
 
### VM2 Specs 
  VM2InstanceName: 
    Description: Name for the instance (if more than one instance is being launched)
    Type: String
    Default: VMInstanceName (optional)
  VM2InstanceType:
    Description: (optional) Type of VM that the user wants to launch 
    Type: String
    Default: t2.micro
    AllowedValues: 
      - t2.micro
      - m1.small
      - m1.large
  VM2KeyPair: 
    Description: (optional) Select the keypair to SSH into instance
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: "KeyPair (optional)"
  VM2VPC: 
    Description: (optional) Specify the VPC to launch the instance
    Type: "AWS::EC2::VPC::Id"
    Default: "VPC (optional)"
  VM2Subnet: 
    Description: (optional) Select the department subnet
    Type: "AWS::EC2::Subnet::Id"
    Default: "Subnet (optional)"
  VM2SecurityGroup: 
    Description: (optional) Select the security Group associated with the department
    Type: "AWS::EC2::SecurityGroup::Id"
    Default: "Security Group (optional)"

### VM3 Specs
  VM3InstanceName: 
    Description: Name for the instance (if more than one instance is being launched)
    Type: String
    Default: VMInstanceName (optional)
  VM3InstanceType:
    Description: (optional) Type of VM that the user wants to launch 
    Type: String
    Default: t2.micro
    AllowedValues: 
      - t2.micro
      - m1.small
      - m1.large
  VM3KeyPair: 
    Description: (optional) Select the keypair to SSH into instance
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: "KeyPair (optional)"
  VM3VPC: 
    Description: (optional) Specify the VPC to launch the instance
    Type: "AWS::EC2::VPC::Id"
    Default: "VPC (optional)"
  VM3Subnet: 
    Description: (optional) Select the department subnet
    Type: "AWS::EC2::Subnet::Id"
    Default: "Subnet (optional)"
  VM3SecurityGroup: 
    Description: (optional) Select the security Group associated with the department
    Type: "AWS::EC2::SecurityGroup::Id"
    Default: "Security Group (optional)"

### VM4 Specs
  VM4InstanceName: 
    Description: Name for the instance (if more than one instance is being launched)
    Type: String
    Default: VMInstanceName (optional)
  VM4InstanceType:
    Description: (optional) Type of VM that the user wants to launch 
    Type: String
    Default: t2.micro
    AllowedValues: 
      - t2.micro
      - m1.small
      - m1.large
  VM4KeyPair: 
    Description: (optional) Select the keypair to SSH into instance
    Type: "AWS::EC2::KeyPair::KeyName"
    Default: "KeyPair (optional)"
  VM4VPC: 
    Description: (optional) Specify the VPC to launch the instance
    Type: "AWS::EC2::VPC::Id"
    Default: "VPC (optional)"
  VM4Subnet: 
    Description: (optional) Select the department subnet
    Type: "AWS::EC2::Subnet::Id"
    Default: "Subnet (optional)"
  VM4SecurityGroup: 
    Description: (optional) Select the security Group associated with the department
    Type: "AWS::EC2::SecurityGroup::Id"
    Default: "Security Group (optional)"


Conditions:
### Determines how many VMS will be launched
  Launch1: !Equals [1, 1]
  Launch2: !Not [!Equals [1, !Ref InstanceCount]]
  Launch3: !And
    - !Not [!Equals [1, !Ref InstanceCount]]
    - !Not [!Equals [2, !Ref InstanceCount]]
  Launch4: !Or
    - !Equals [4, !Ref InstanceCount]
    - !Equals [5, !Ref InstanceCount]

Resources:
###VM1 Resource
  VMInstance1:
    Condition: Launch1
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref VM1KeyPair
      ImageId: ami-026b57f3c383c2eec
      InstanceType: !Ref VM1InstanceType
      NetworkInterfaces:
        - GroupSet:
            - !Ref VM1SecurityGroup
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref VM1Subnet
      Tags:
        - Key: 'Name'
          Value: !Ref VM1InstanceName
###VM2 Resource
  VMInstance2:
    Condition: Launch2
    Type: AWS::EC2::Instance
    Properties:
      KeyName: 
        Fn::If:
        - Launch2
        - Ref: VM2KeyPair
        - Ref: AWS::NoValue
      ImageId: ami-026b57f3c383c2eec
      InstanceType: 
        Fn::If:
        - Launch2
        - Ref: VM2InstanceType
        - Ref: AWS::NoValue
      NetworkInterfaces:
        - GroupSet:
            Fn::If:
            - Launch2
            - Ref: VM2SecurityGroup
            - Ref: AWS::NoValue 
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId:
            Fn::If:
            - Launch2
            - Ref: VM2Subnet
            - Ref: AWS::NoValue
      Tags:
        - Key: 'Name'
          Value: !Ref VM2InstanceName

###VM3 Resource
  VMInstance3:
    Condition: Launch3
    Type: AWS::EC2::Instance
    Properties:
      KeyName: 
        Fn::If:
        - Launch3
        - Ref: VM3KeyPair
        - Ref: AWS::NoValue
      ImageId: ami-026b57f3c383c2eec
      InstanceType: 
        Fn::If:
        - Launch3
        - Ref: VM3InstanceType
        - Ref: AWS::NoValue
      NetworkInterfaces:
        - GroupSet:
            Fn::If:
            - Launch3
            - Ref: VM3SecurityGroup
            - Ref: AWS::NoValue 
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId:
            Fn::If:
            - Launch3
            - Ref: VM3Subnet
            - Ref: AWS::NoValue
      Tags:
        - Key: 'Name'
          Value: !Ref VM3InstanceName

###VM4 Resource
  VMInstance4:
    Condition: Launch4
    Type: AWS::EC2::Instance
    Properties:
      KeyName: 
        Fn::If:
        - Launch4
        - Ref: VM4KeyPair
        - Ref: AWS::NoValue
      ImageId: ami-026b57f3c383c2eec
      InstanceType: 
        Fn::If:
        - Launch4
        - Ref: VM4InstanceType
        - Ref: AWS::NoValue
      NetworkInterfaces:
        - GroupSet:
            Fn::If:
            - Launch4
            - Ref: VM4SecurityGroup
            - Ref: AWS::NoValue 
          AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId:
            Fn::If:
            - Launch4
            - Ref: VM4Subnet
            - Ref: AWS::NoValue
      Tags:
        - Key: 'Name'
          Value: !Ref VM4InstanceName
